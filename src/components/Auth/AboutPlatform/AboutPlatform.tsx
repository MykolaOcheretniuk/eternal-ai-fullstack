"use client";
import XMark from "../../../../public/xMark.svg";
import Spinner from "../../../../public/ButtonSpinner.svg";
import Image from "next/image";
import EternalLogo from "../../../../public/EternalLogo.svg";
import "./AboutPlatform.css";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import { useEscapeKeyHandler } from "@/utils/handleEscPush";
import { useEnterKeyHandler } from "@/utils/handleEnterKey";
import { BASE_URL, HEADERS } from "@/constants/api";
import { useIsPopUpOpen } from "@/store/useIsPopUpOpenStore";
export const AboutPlatform = () => {
  const router = useRouter();
  const [checked, setChecked] = useState(false);
  const [authDataSending, setAuthDataSending] = useState(false);
  const { setIsOpen: setIsPopUpOpen } = useIsPopUpOpen();
  useEscapeKeyHandler(() => {
    setIsPopUpOpen(false);
    router.push("/");
  });
  useEnterKeyHandler(() => {
    if (checked) {
      signUpUser();
    }
  });
  const signUpUser = async () => {
    setAuthDataSending(true);
    const registrationData = sessionStorage.getItem("REGISTER_DATA");
    if (registrationData) {
      const res = await fetch(`${BASE_URL}/sign-up`, {
        method: "POST",
        headers: HEADERS,
        body: registrationData,
      });
      const { message } = await res.json();
      if (!res.ok) {
        return router.push(`/?action=signUp&errorMessage=${message}`);
      }
      setAuthDataSending(false);
      router.push(`/?action=signIn&successMessage=${message}`);
    }
  };
  useEffect(() => {
    document.body.style.overflow = "hidden";
    return () => {
      document.body.style.overflow = "visible";
    };
  }, []);
  return (
    <>
      <Image
        className="auth-pop-up-logo"
        src={EternalLogo}
        alt="logo"
        onClick={() => {
          router.push("/");
        }}
      />
      <button
        className="close-button"
        onClick={() => {
          setIsPopUpOpen(false);
          router.push("/");
        }}
      >
        <Image className="close-button-ig" src={XMark} alt="x mark" />
      </button>
      <div className="container">
        <div className="about-platform-inner gradient-border">
          <h1 className="about-platform-title avenir-bold">
            About the platform
          </h1>
          <p className="about-platform-text base-text">
            All of the characters here are not real. Everything you see and hear
            is entirely generated by Artificial Intelligence machines. The
            opinions and beliefs expressed do not represent anyone. They are
            hallucinations of a bunch of 1s and 0s inside of a magic computer.{" "}
          </p>
          <p className="about-platform-text base-text">
            The creators of this platform have the best intentions with this
            project, and deeply admire each and every character on the site. You
            might even say they are our Heroes. In fact, you can say that.
          </p>
          <div className="about-platform-agree">
            <div className="checkbox-container">
              <input
                className="about-platform-checkbox"
                type="checkbox"
                id="ch1"
                onClick={() => {
                  setChecked(!checked);
                }}
              ></input>
              <label
                className="checkbox-label"
                htmlFor={"ch1"}
                onClick={() => {}}
              ></label>
            </div>
            <p className="about-check-text base-text">
              I have read the above statement
            </p>
          </div>
          <button
            className="about-platform-button gradient-button"
            disabled={checked === false || authDataSending}
            onClick={async () => {
              await signUpUser();
            }}
          >
            {authDataSending ? (
              <Image className="button-spinner" src={Spinner} alt="loading" />
            ) : (
              <>continue</>
            )}
          </button>
        </div>
      </div>
    </>
  );
};
